# -*- coding: utf-8 -*-
"""Neural Network tensorflow digits mnist and fashion mnist

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o_uw-KpTaRCI_SHvju2fzYZtKqwmR7XW
"""

import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

(train_fashion_images, train_fashion_labeles), (test_fashion_images, test_fashion_labels) = tf.keras.datasets.fashion_mnist.load_data()
(train_digits_images, train_digits_labels), (test_digits_images, test_digits_labels) = tf.keras.datasets.mnist.load_data()

train_fashion_images = train_fashion_images / 255
test_fashion_images = test_fashion_images / 255

def model_use():
  model = models.Sequential([layers.Flatten(input_shape = (28, 28)), layers.Dense(256, activation = "relu"), layers.Dropout(0.3), layers.Dense(128, activation = "relu"), layers.Dropout(0.3), layers.Dense(64, activation = "relu"), layers.Dense(10, activation = "softmax")])
  model.compile(optimizer = "adam", loss = "sparse_categorical_crossentropy", metrics = ["accuracy"])
  return model

digits_model = model_use()
digits_history = digits_model.fit(train_digits_images, train_digits_labels, epochs = 10, batch_size = 64, validation_split = 0.2)

fashion_model = model_use()
fashion_history = fashion_model.fit(train_fashion_images, train_fashion_labeles, epochs = 10, batch_size = 64, validation_split = 0.2)

plt.plot(digits_history.history["val_accuracy"], label = "Digits Val Accuracy")
plt.plot(fashion_history.history["val_accuracy"], label = "Fashion Val Accuracy")
plt.xlabel("Epoch")
plt.ylabel("Accuracy")
plt.legend()
plt.grid(True)
plt.show()

