# -*- coding: utf-8 -*-
"""Nerual Network tensorflow 2D images

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WWiE7CL3o8pU_kcsIsPTzBNUYN7WTzvI
"""

import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

(train_images, train_labels), (test_images, test_labels) = tf.keras.datasets.mnist.load_data()

train_images = train_images.astype("float32") / 255
test_images = test_images.astype("float32") / 255

train_images

test_images

fig, axes = plt.subplots(1, 10, figsize = (10, 10))

for i in range(10):
  axes[i].imshow(train_images[i].reshape(28, 28), cmap = "gray")
  axes[i].set_title(train_labels[i])
  axes[i].axis("off")
plt.show()

model = models.Sequential([layers.Conv2D(32, (3,3), activation = "relu", input_shape = (28, 28, 1)), layers.MaxPooling2D((2, 2)), layers.Conv2D(64, (3,3), activation = "relu"), layers.MaxPooling2D((2, 2)), layers.Flatten(), layers.Dense(64, activation = "relu"), layers.Dense(10, activation = "softmax")])

model.compile(optimizer = "adam", loss = "sparse_categorical_crossentropy", metrics = ["accuracy"])
histroy = model.fit(train_images, train_labels, epochs = 5)

